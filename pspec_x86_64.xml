<PISI>
    <Source>
        <Name>haskell-polyparse</Name>
        <Packager>
            <Name>Bryan T. Meyers</Name>
            <Email>bmeyers@datadrake.com</Email>
        </Packager>
        <License>LGPL-2.1-or-later</License>
        <PartOf>programming.haskell</PartOf>
        <Summary xml:lang="en">A variety of alternative parser combinator libraries, including the original HuttonMeijer set.</Summary>
        <Description xml:lang="en">A variety of alternative parser combinator libraries, including the original HuttonMeijer set. The Poly sets have features like good error reporting, arbitrary token type, running state, lazy parsing, and so on. Finally, Text.Parse is a proposed replacement for the standard Read class, for better deserialisation of Haskell values from Strings.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://getsol.us/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>haskell-polyparse</Name>
        <Summary xml:lang="en">A variety of alternative parser combinator libraries, including the original HuttonMeijer set.</Summary>
        <Description xml:lang="en">A variety of alternative parser combinator libraries, including the original HuttonMeijer set. The Poly sets have features like good error reporting, arbitrary token type, running state, lazy parsing, and so on. Finally, Text.Parse is a proposed replacement for the standard Read class, for better deserialisation of Haskell values from Strings.
</Description>
        <PartOf>programming.haskell</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/Parse.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/Parse.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/Parse/ByteString.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/Parse/ByteString.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/HuttonMeijer.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/HuttonMeijer.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/HuttonMeijerWallace.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/HuttonMeijerWallace.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Base.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Base.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/ByteString.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/ByteString.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/ByteStringChar.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/ByteStringChar.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Lazy.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Lazy.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Lex.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Lex.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Parser.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Parser.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Plain.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Plain.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Result.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Result.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/State.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/State.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/StateLazy.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/StateLazy.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/StateParser.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/StateParser.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/StateText.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/StateText.hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Text.dyn_hi</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/Text/ParserCombinators/Poly/Text.hi</Path>
            <Path fileType="library">/usr/lib64/x86_64-linux-ghc-8.6.5/libHSpolyparse-1.13-HUdLdg8KYOFgBkeCosvOH-ghc8.6.5.so</Path>
            <Path fileType="doc">/usr/share/doc/x86_64-linux-ghc-8.6.5/polyparse-1.13/COPYRIGHT</Path>
            <Path fileType="doc">/usr/share/doc/x86_64-linux-ghc-8.6.5/polyparse-1.13/LICENCE-LGPL</Path>
            <Path fileType="doc">/usr/share/doc/x86_64-linux-ghc-8.6.5/polyparse-1.13/LICENCE-commercial</Path>
        </Files>
    </Package>
    <Package>
        <Name>haskell-polyparse-devel</Name>
        <Summary xml:lang="en">Development files for haskell-polyparse</Summary>
        <Description xml:lang="en">A variety of alternative parser combinator libraries, including the original HuttonMeijer set. The Poly sets have features like good error reporting, arbitrary token type, running state, lazy parsing, and so on. Finally, Text.Parse is a proposed replacement for the standard Read class, for better deserialisation of Haskell values from Strings.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="4">haskell-polyparse</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/package.conf.d/haskell-polyparse-1.13.conf</Path>
            <Path fileType="library">/usr/lib64/ghc-8.6.5/polyparse-1.13/libHSpolyparse-1.13-HUdLdg8KYOFgBkeCosvOH.a</Path>
        </Files>
    </Package>
    <History>
        <Update release="4">
            <Date>2020-12-23</Date>
            <Version>1.13</Version>
            <Comment>Packaging update</Comment>
            <Name>Bryan T. Meyers</Name>
            <Email>bmeyers@datadrake.com</Email>
        </Update>
    </History>
</PISI>